# tmux.conf
# Nefari0uss

#region --- Reference ---

# ---set vs setw vs setg ---
# set (set-option): Controls the global/session/server options.
# setw (set-window-option): Controls the window specific options.
# setg (set-option -g): Sets the option globally for the server (all sessions).

# --- Command Flags ---
# -g: Global scope (applies to all sessions or windows).
# -w: Apples to the existing value rather than replacing it.
# -s: Server option (applies to the tmux server itself).
# -u: Unset an option (reset to default).
# -q: Quiet mode (suppress output). Will not throw an error if flag doesn't exist.
# Use `tmux list-commands` to inspect available commands and flags.

# --- Binding Flags ---
# -c: Command to run (for `run-shell` bindings).
# -n: No prefix key (bind without prefix).
# -r: Make the key repeatable when held down.
# -t: Apply the binding to a specific target.
# -N: Adds a note/annotation to the key binding.
# -T: Bind to a specific key-table (e.g. copy-mode-vi).

# --- Window / Pane Flags ---
# -c <path> : start new window/pane in <path>
# -d: Detached mode (doesn't attach to the new window/pane).
# -h/v: Horizontal/Vertical split (for `split-window`).
# -p: Percentage (for size specification).
# -F: Format (for specifying format strings).
# -P: print the new pane id after creation.

# --- bind vs bind-key ---
# `bind` is an alias for `bind-key` in modern tmux versions. They are equivalent.
# Use `bind-key -T <table> <key> ...` to bind keys to specific key-tables.

# --- Special Key Combinations ---
# Control (e.g. C-a is Ctrl+a)
# Alt/Meta (e.g. M-j is Alt+j)
# Shift (e.g. S-<something>)
#   Letters: use the uppercase letter directly (e.g. S-A is Shift+a).
#   Named keys: use the S- prefix (e.g. S-Left is Shift+Left Arrow).
#   Symbols: Use the symbol directly (e.g. !, @, #, etc.).
# Arrow keys: Use 'Left', 'Right', 'Up', 'Down'.
# Backspace: Use 'BSpace'.
# Enter/Return: Use 'Enter'.
# Escape: Use 'Escape' or 'Esc'.
# Function keys: 'F1', 'F2', etc.
# Home/End: Use 'Home' and 'End'.
# Page Up/Down: Use 'PageUp' and 'PageDown'.
# Space: Use 'Space'.
# Tab: Use 'Tab' or 'BTab' for Shift+Tab.

# --- Other ---
# <Prefix> S-C will bring up a list of all options and their current values.

# Quick reference commands:
#   tmux list-keys                  # list current key bindings
#   tmux list-commands              # list available tmux commands
#   tmux show-options -g            # show global options
#   tmux show-window-options -wg   # show window options (global and local)
#   tmux display-message -p "#{session_name}:#{window_index}.#{pane_index}"  # show context info

# Useful format strings:
#   #{session_name}  #{window_index}  #{pane_index}  #{pane_current_path}  #{pane_title}

# Example: common patterns
#   bind r command-prompt -I "#{session_name}" "rename-session \"%%\""
#   bind c new-window -c "#{pane_current_path}"

#endregion

# TODO: Theme

#region --- General Settings ---

set-option -g default-shell /bin/zsh            # Use zsh as default shell.
set -g default-terminal "screen-256color"       # Enable better color support.
set-option -g detach-on-destroy off             # Do not kill tmux on session destroy.
set -g history-limit 20000                      # Set history scrollback limit.
set -sg escape-time 5                           # Address vim mode switching delay.
set -g buffer-limit 20                          # Set buffer limit.
set -g repeat-time 300                          # Time to wait in ms between repeating keys.
set -g set-clipboard on                         # Enable clipboard integration.

# Yazi Image Preview: https://yazi-rs.github.io/docs/image-preview/#tmux
set -g allow-passthrough on             # Allow passthrough of unknown escape sequences.
set -ga update-environment TERM         # Ensure TERM is updated in tmux environment.
set -ga update-environment TERM_PROGRAM # Ensure TERM_PROGRAM is updated in tmux environment.

# Keys
set -g extended-keys on # Enable support for extended keys (e.g. Alt+Arrow, Shift+Arrow).
setw -g mode-keys vi    # Use vim keybindings in copy mode.

bind r source-file $HOME/.config/tmux/tmux.conf \; display "Tmux config reloaded." # Reload tmux configuration.

#endregion

#region --- Activity Messages ---
set -g bell-action any     # Listen to alerts from all windows.
set -g monitor-bell on     # Notice bell in windows.
set -g visual-activity on  # Send bell *and* notify when activity occurs.
set -g monitor-activity on # Monitor activity in windows.
set -g visual-bell off     # Disable visual bell (flash).
set -g visual-silence both # Disable visual indication for silence and bell.
set -g focus-events on     # Enable terminal focus events if supported.
set -g display-time 1500   # Display messages for 1.5s. Default is 750 ms.
#endregion

#region --- Window & Pane Options ---
set -g set-titles on                                     # Allow tmux to set terminal title.
set -g pane-base-index 1                                 # Start pane index at 1 (server-global).

# Window Options
setw -g allow-rename off                                 # Window name should not follow last command.
set -g base-index 1                                      # Start window index at 1.
set -g renumber-windows on                               # Renumber windows when one is closed.
set -g set-titles-string "#I:#W"                         # The title will be <index>:<window-name>
setw -g automatic-rename on                              # Disable automatic window renaming.
set -g window-status-current-style "underscore"          # Underscore current window in status bar.

# Window Navigation
bind -n C-p previous-window # Without prefix, jump to previous window.
bind -n C-n next-window     # Without prefix, jump to next window.
bind Space last-window      # Jump to previous window.

# Swap window (index).
bind -r "<" swap-window -d -t -2 # Swap with window index -1.
bind -r ">" swap-window -d -t +0 # Swap with window index +1.

# Window splits.
bind v split-window -hc "#{pane_current_path}" # Split vertically, inheriting cwd.
bind h split-window -vc "#{pane_current_path}" # Split horizontally, inheriting cwd.
bind c new-window -c "#{pane_current_path}" # Create new window, inheriting cwd.

# Pane Options
setw -g aggressive-resize off                            # Do *not* aggressively resize panes to the smallest client.
set -g remain-on-exit off                                # Don't keep panes open after process exit.
set -g pane-border-status top                            # Show pane borders at the top.
set -g pane-border-format "#P: #{pane_current_command}"  # Show <pane-index>: <command> in the border.
default_pane_resize=5                                    # Default pane resize amount.

# Pane Navigation (without prefix)
bind -n C-h select-pane -L # Go to the left pane.
bind -n C-j select-pane -D # Go to the bottom pane.
bind -n C-k select-pane -U # Go to the top pane.
bind -n C-l select-pane -R # Go to the right pane.

bind \' switch-client -t"{marked}" # Goto a mark. Make a mark with Prefix + m.

# Pane Resizing
# Use <C-S-h/j/k/l> to resize panes. Does not require prefix.
bind -n C-S-h resize-pane -L 5
bind -n C-S-j resize-pane -D 5
bind -n C-S-k resize-pane -U 5
bind -n C-S-l resize-pane -R 5
# bind -r H resize-pane -L 5
# bind -r J resize-pane -D 5
# bind -r K resize-pane -U 5
# bind -r L resize-pane -R 5

# Popup Window
set-option -g popup-border-lines rounded
set-option -g popup-style "bg=#24273a,fg=#cad3f5"
set-option -g popup-border-style "bg=#24273a,fg=#00bbff"

#endregion

#region --- Mouse ---
set -g mouse on                                 # Enable mouse support for panes and selection.

# Scroll up/down with the mouse wheel.
bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Scroll up/down an entire page.
# bind -t vi-copy    WheelUpPane   page-up
# bind -t vi-copy    WheelDownPane page-down
# bind -t emacs-copy WheelUpPane   page-up
# bind -t emacs-copy WheelDownPane page-down

unbind -T copy-mode-vi MouseDragEnd1Pane # Do not exit copy mode after mouse drag.

#endregion

#region --- Keybindings ---

# Copy & paste using vim keybindings.
unbind V
bind V copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'V' send -X begin-selection # Visually select with "V".
bind-key -T copy-mode-vi 'y' send -X copy-selection  # Copy with "y".

#endregion

#region --- Plugins ---

# Tmux Plugin Manager: A plugin manager for tmux.
# https://github.com/tmux-plugins/tpm
# Usage: set -g @plugin 'repository/name'
set -g @plugin 'tmux-plugins/tpm'


# Tmux Sensible: A set of tmux defaults that everyone can agree on.
# https://github.com/tmux-plugins/tmux-sensible
set -g @plugin 'tmux-plugins/tmux-sensible'


# Tmux Ressurect & Continuum: Automatically save and restore tmux session.
# https://github.com/tmux-plugins/tmux-resurrect
# https://github.com/tmux-plugins/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on' # Enable automatic restoration of tmux sessions on tmux start.


# Tmux Fzf Links: Open any kind of link with highly customizable matching patterns.
# https://github.com/alberti42/tmux-fzf-links
set -g @plugin 'alberti42/tmux-fzf-links'
set-option -g @fzf-links-key C-f
# set-option -g @fzf-links-history-lines "0"
# set-option -g @fzf-links-editor-open-cmd "tmux new-window -n 'vim' /usr/sbin/vim +%line '%file'"
set-option -g @fzf-links-editor-open-cmd "tmux popup -E -w 100% -h 100% /usr/sbin/vim +%line '%file'"
# set-option -g @fzf-links-browser-open-cmd "/path/to/browser '%url'"
set-option -g @fzf-links-fzf-path "fzf"
set-option -g @fzf-links-fzf-display-options "-w 100% --maxnum-displayed 20 --multi --track"
set-option -g @fzf-links-use-colors on
# set-option -g @fzf-links-ls-colors-filename "~/.cache/tmux-fzf-links/cached_ls_colors.txt"
set-option -g @fzf-links-hide-bottom-bar off


# Tmux Which Key: Allows users to select actions from a customizable popup menu.
# https://github.com/alexwforsythe/tmux-which-key
# Usage: Prefix + <C-Space> to bring up the which-key menu.
set -g @plugin 'alexwforsythe/tmux-which-key'


# Tmux Powerline
# https://github.com/erikw/tmux-powerline
set -g @plugin 'erikw/tmux-powerline'


#endregion

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.config/tmux/plugins/tpm/tpm"

#endregion
